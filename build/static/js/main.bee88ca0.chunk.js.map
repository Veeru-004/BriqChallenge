{"version":3,"sources":["Quote.js","Rate.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","useState","quotes","setQuotes","getQuote","fetch","then","response","json","data","randomNum","Math","floor","random","length","useEffect","className","text","author","onClick","Rate","rating","setRating","id","rate","ratingValue","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAEe,SAASA,IAEtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAW,WACfC,MAAM,+BACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACL,IAAIC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QAChDX,EAAUM,EAAKC,QAMrB,OAHAK,qBAAU,WACRX,MACC,IAED,qCACE,sBAAKY,UAAU,OAAf,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACA,6BAAKd,EAAOe,OACZ,6BAAKf,EAAOgB,cAGd,0BAEA,wBAAQF,UAAU,MAAMG,QAASf,EAAjC,0BCvBO,SAASgB,IACtB,MAA4BnB,mBAAS,GAArC,mBAAOoB,EAAP,KAAeC,EAAf,KAIA,OACE,sBAAKN,UAAU,MAAf,UACE,cAAChB,EAAD,CAAOuB,GAAIF,IACX,6BAAKA,IACL,cAAC,SAAD,CAAQE,GAAG,SAASJ,QAPH,SAACK,GACpBF,EAAUE,IAMmCC,YAAaJ,OCZ/C,SAASK,IACrB,OACC,8BACA,cAACN,EAAD,MCLJ,IAYeO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.bee88ca0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nexport default function Quote() {\r\n\r\n  const [quotes, setQuotes] = useState(\"\");\r\n  \r\n  const getQuote = () => {\r\n    fetch(\"https://type.fit/api/quotes\")\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        let randomNum = Math.floor(Math.random() * data.length);\r\n        setQuotes(data[randomNum]);\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    getQuote();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"App1\">\r\n        <div className=\"example\">\r\n          <div className=\"font\">\r\n          <h2>{quotes.text}</h2>\r\n          <h3>{quotes.author}</h3>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        </div>\r\n        <button className=\"btn\" onClick={getQuote}>New Quote</button>\r\n     \r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Rating } from 'react-simple-star-rating'\r\nimport Quote from './Quote'\r\nimport './App.css';\r\n\r\nexport default function Rate() {\r\n  const [rating, setRating] = useState(0) \r\n  const handleRating = (rate) => {\r\n    setRating(rate)  \r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Quote id={rating} />\r\n      <h1>{rating}</h1>\r\n      <Rating id=\"rating\" onClick={handleRating} ratingValue={rating} />\r\n    </div>\r\n  )\r\n}","import Rate from \"./Rate\";\n\nexport default function App() {\n   return (\n    <div >\n    <Rate/>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}